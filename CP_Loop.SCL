// 接收DB块 可定义多个
DATA_BLOCK DB55 
    STRUCT    
       buff : ARRAY  [0 .. 299 ] OF BYTE ;   
    END_STRUCT ; 
BEGIN
END_DATA_BLOCK

//轮询DB块，含485发送指令，List为一个341模块的轮询序列，多个341可以定义多个List
DATA_BLOCK "Poll_DB" 
  STRUCT     
   CP01 : ARRAY  [0 .. 3 ] OF //电量表
   STRUCT     
    Address : BYTE ;    //子站地址
    MFunction : BYTE ;    //modbus 功能号
    StartAddress : WORD ;    //起始地址
    Number : WORD ;    //长度
    CRC : WORD ;    //CRC
    recvDB : INT ;    //接收DB块号
    recvDBB : INT ;    //接收DB起始地址
   END_STRUCT ;    
   CP02 : STRUCT     //天然气表
    next0 : INT ;    //下一轮询偏移量，最后一个轮询应置为0重新回到第1个
    length0 : INT  := 8;    //发送长度
    recvDB0 : INT ;    //接收DB块号
    recvDBB0 : INT ;    //接收DB起始地址
    sendData0 : ARRAY  [0 .. 7 ] OF //发送数据
    BYTE ;    
    next1 : INT ;    //下一轮询偏移量，最后一个轮询应置为0重新回到第1个
    length1 : INT  := 7;    //发送长度
    recvDB1 : INT ;    //接收DB块号
    recvDBB1 : INT ;    //接收DB起始地址
    sendData1 : ARRAY  [0 .. 6 ] OF //发送数据
    BYTE ;    
    next2 : INT ;    //下一轮询偏移量，最后一个轮询应置为0重新回到第1个
    length2 : INT  := 7;    //发送长度
    recvDB2 : INT ;    //接收DB块号
    recvDBB2 : INT ;    //接收DB起始地址
    sendData2 : ARRAY  [0 .. 6 ] OF //发送数据
    BYTE ;    
   END_STRUCT ;    
  END_STRUCT ;    
BEGIN
   CP01[0].Address := B#16#1; 
   CP01[0].MFunction := B#16#3; 
   CP01[0].StartAddress := W#16#25; 
   CP01[0].Number := W#16#5C; 
   CP01[0].CRC := W#16#5438; 
   CP01[0].recvDB := 51; 
   CP01[0].recvDBB := 0; 
   CP01[1].Address := B#16#2; 
   CP01[1].MFunction := B#16#3; 
   CP01[1].StartAddress := W#16#25; 
   CP01[1].Number := W#16#5C; 
   CP01[1].CRC := W#16#540B; 
   CP01[1].recvDB := 52; 
   CP01[1].recvDBB := 0; 
   CP01[2].Address := B#16#3; 
   CP01[2].MFunction := B#16#3; 
   CP01[2].StartAddress := W#16#25; 
   CP01[2].Number := W#16#5C; 
   CP01[2].CRC := W#16#55DA; 
   CP01[2].recvDB := 53; 
   CP01[2].recvDBB := 0; 
   CP01[3].Address := B#16#4; 
   CP01[3].MFunction := B#16#3; 
   CP01[3].StartAddress := W#16#25; 
   CP01[3].Number := W#16#5C; 
   CP01[3].CRC := W#16#546D; 
   CP01[3].recvDB := 54; 
   CP01[3].recvDBB := 0; 
   CP02.next0 := 16; 
   CP02.length0 := 8; 
   CP02.recvDB0 := 55; 
   CP02.recvDBB0 := 0; 
   CP02.sendData0[0] := B#16#1; 
   CP02.sendData0[1] := B#16#3; 
   CP02.sendData0[2] := B#16#0; 
   CP02.sendData0[3] := B#16#1; 
   CP02.sendData0[4] := B#16#0; 
   CP02.sendData0[5] := B#16#C; 
   CP02.sendData0[6] := B#16#14; 
   CP02.sendData0[7] := B#16#F; 
   CP02.next1 := 16; 
   CP02.length1 := 7; 
   CP02.recvDB1 := 55; 
   CP02.recvDBB1 := 32; 
   CP02.sendData1[0] := B#16#2; 
   CP02.sendData1[1] := B#16#3; 
   CP02.sendData1[2] := B#16#0; 
   CP02.sendData1[3] := B#16#0; 
   CP02.sendData1[4] := B#16#18; 
   CP02.sendData1[5] := B#16#8E; 
   CP02.sendData1[6] := B#16#5D; 
   CP02.next2 := 0; 
   CP02.length2 := 7; 
   CP02.recvDB2 := 55; 
   CP02.recvDBB2 := 64; 
   CP02.sendData2[0] := B#16#3; 
   CP02.sendData2[1] := B#16#3; 
   CP02.sendData2[2] := B#16#0; 
   CP02.sendData2[3] := B#16#0; 
   CP02.sendData2[4] := B#16#18; 
   CP02.sendData2[5] := B#16#4E; 
   CP02.sendData2[6] := B#16#60; 
END_DATA_BLOCK

FUNCTION "OnRecv" : VOID
TITLE ='收到数据后的处理'
VAR_INPUT
  RecvDB : INT ; //当前已接收数据块号 
  RecvDBB : INT ; //当前已接收数据开始地址
  Len : INT ; //接收长度
END_VAR
BEGIN
END_FUNCTION

// 调用
FUNCTION "CP_Loop" : VOID

"CP_Poll"."CP01"(
    Laddr := 256,
    DATA := "Poll_DB".CP02);

END_FUNCTION



